//+++++++++++++++++++++++++++++++++Работа с Com-gортом.cpp++++++++++++++++++++++++++++++++
//+++ Файл который регламентирует работу с последовательным портом - пока              +++
//+++ только откытие и закрытие. Здесь устанавливается настройки, описаны процессы     +++
//+++ отключения и подключения.                                                        +++
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//------------------------------------------------------------------------------Светлов Я.
//-------------------------------------------------------------svetloff.yaroslav@gmail.com

#include "port.h"
#include <qdebug.h>
#include<QDebug>

port::port(QObject *parent) :
    QObject(parent)
{

}

port::~port()                           // удаление порта вызывает
{
    emit finished_Port();                // сигнал, который  в mainwindow прикручен к выходу из потока
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Этот слот запускается при помещении Порта в поток~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void port :: process_Port()
{
    connect(&thisPort,SIGNAL(error(QSerialPort::SerialPortError)), this, SLOT(handleError(QSerialPort::SerialPortError)));                                  //вызов сдешнего слота, при возник новении ошибки
    connect(&thisPort, SIGNAL(readyRead()),this,SLOT(readyRead_Slot()));                                                                                       //При вызове сигнала - readyRead()(который возникает, при готовности данных считаться или о доступности данных)
}
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Настройка Com-порта~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void port :: Write_Settings_Port(QString name, int baudrate,int DataBits,int Parity,int StopBits)
{





    SettingsPort.name        = name;                                                   //Имя порта
    SettingsPort.baudRate    = (QSerialPort::BaudRate) baudrate;                       //Скорость в бодах
    SettingsPort.dataBits    = (QSerialPort::DataBits) DataBits;                       //Длина слова
    SettingsPort.parity      = (QSerialPort::Parity) Parity;                           //Паритетность
    SettingsPort.stopBits    = (QSerialPort::StopBits) StopBits;                       //Стоповые биты
    SettingsPort.flowControl = (QSerialPort::NoFlowControl) ;

                                                                                        // заданные настройки порта записываются как строковые переменные
    QString baudRateString = QString::number(baudrate);                                 // Скорость в бодах
    QString dataBitsString = QString::number(DataBits);                                 // Длина слова
    int parityInt   = Parity;                                   // Паритетность
    QString stopBitsString = QString::number(StopBits);                                 // Стоповые биты


     emit infotomain(name,baudRateString,dataBitsString, parityInt,stopBitsString);        // вся информация передается в главное окно
      ConnectPort();

}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Соединение программы с Com-портом  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void port :: ConnectPort(void)
{
    thisPort.setPortName(SettingsPort.name);                                              // Установка имени
    if (thisPort.open(QIODevice::ReadWrite))                                              // Если порт свободен
    {
        if(      thisPort.setBaudRate(SettingsPort.baudRate)                              // Если все настройки  установились
              && thisPort.setDataBits(SettingsPort.dataBits)
              && thisPort.setParity(SettingsPort.parity)
              && thisPort.setStopBits(SettingsPort.stopBits)
              && thisPort.setFlowControl(SettingsPort.flowControl)
           )
        {

            qDebug()<<SettingsPort.parity<<"    parity";

            if (thisPort.isOpen())                                                         // порт ПОДКЛЮЧЕН
            {
                 emit infotostatus(SettingsPort.name  + " Подключен");                    // посылай в статус главного окна сообщение
                 emit connecttomenu(true);                                                 // и сигнал, который приведет в готовность главное окно
             }
        }
        else
        {
            thisPort.close();                                                           // иначе - порт закрыт
            emit connecttomenu(false);                                                  // и соответсвующий сигнал
        }

    }
    else
    {
        thisPort.close();                                                                 // Иначе - порт закрыт
        emit connecttomenu(false);                                                         // главное окно переходит в режим отключенного окна
    }
}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Запись данных в порт~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void port::WriteToPort(QByteArray data)
{

        thisPort.setParity(QSerialPort::MarkParity);            // устанавливай паритетность - mark

        QByteArray addrs;                                       // Объявляется байтовый массив
        addrs = data.left(1);                                   // в котором будет содержаться адрес


        thisPort.write(addrs);                                   //  запись в устройство
                thisPort.flush();                               // "вываливает" все данные в порт
                addrs.clear();                                  // переменная очищаетс
        while (thisPort.waitForBytesWritten(100));

        thisPort.setParity(SettingsPort.parity);                // далее com- порту устанавливается паритетность, которая выбрана в настройках
        qDebug()<<"PAR = "<<SettingsPort.parity;
        data.remove(0,1);                                      // удаляем уже отправленное
        thisPort.write(data);                                   //если порт открыт - записываем туда данные
        thisPort.flush();                                       // "вываливает" все данные в порт
        while (thisPort.waitForBytesWritten(100));                  //Ожидай блокируй всей функции, связанные с портом
        data.clear();                                               // Очищай байтовый массив

}



//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Чтение данных с порта~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void port::readyRead_Slot()
{
    arr.append(thisPort.readAll());                     // чтение данных с порта
    emit sendDataMain(arr);                          // иначе просто посылай пришедший ответ на обработку
    arr.clear();

}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Ошибка порта~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void port::handleError(QSerialPort::SerialPortError error)
{
    if((thisPort.isOpen()) && (error == QSerialPort::ResourceError))                    //Если порт открыт и возникает такая ошибка ресурсов, то
    {
        emit infotostatus(thisPort.errorString().toLocal8Bit());                                   //Выводи сообщение
        DisconnectPort();
        emit connecttomenu(false);                                                                 //Отключай порт
    }

}
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Ошибка порта~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
void  port::DisconnectPort()
{
    if(thisPort.isOpen())
    {                                                                     // Если порт открыт
        qDebug("disconnect");
        thisPort.close();                                               // Закроем его
        emit infotomain("COM  ","   ","   ", 13 ,"   ");               // Удалим информацию в главном окне
        emit infotostatus(SettingsPort.name  + " Отключен");            // Вывод информации в статус
        emit connecttomenu(false);                                      // главное окно переходит в режим отключенного окна
    }
}
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




